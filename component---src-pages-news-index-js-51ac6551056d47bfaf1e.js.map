{"version":3,"file":"component---src-pages-news-index-js-51ac6551056d47bfaf1e.js","mappings":"uIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,aAAa,KAACC,GAAQN,EAErD,OADKM,GAUP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAZaG,CAAqB,QAAQ,GACjCC,EAAAA,cAAoBL,EAAM,CAC/BM,MAAO,kBACND,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,uQAC9C,CAKA,IAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOS,EAAYH,EAAAA,cAAoBG,EAAWf,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,C,uHCkBA,UAzBkBgB,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACnC,MAAMG,EAAOF,EAAKG,OAAOC,MAEzB,OACET,EAAAA,cAACU,EAAAA,EAAM,CAACL,KAAMA,EAAMC,SAAUA,GAC5BN,EAAAA,cAAA,OAAKW,UAAU,kBACbX,EAAAA,cAACY,EAAAA,EAAW,MACXL,EAAKM,KAAKC,IACT,MAAMb,EAAQa,EAAKC,YAAYd,MACzBe,EAAO,IAAIC,KAAKH,EAAKC,YAAYC,MACvC,OACEhB,EAAAA,cAAA,WAASW,UAAU,uBAAuBO,IAAKJ,EAAKK,OAAOC,MACzDpB,EAAAA,cAAA,OAAKW,UAAU,WAAWK,EAAKK,sBAC/BrB,EAAAA,cAAA,UACEA,EAAAA,cAACsB,EAAAA,KAAI,CAACC,GAAIT,EAAKK,OAAOC,MAAOnB,IAE/BD,EAAAA,cAAA,eAAUc,EAAKU,SACP,KAIT,EAMN,MAAMC,EAAOC,IAAA,IAAC,KAAErB,GAAMqB,EAAA,OAC3B1B,EAAAA,cAAC2B,EAAAA,EAAQ,CAAC1B,MAAOI,EAAKuB,KAAKC,aAAa5B,OAAS,C","sources":["webpack://ms-gh-pages/./content/hero.mdx","webpack://ms-gh-pages/./src/pages/news/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {Hero} = _components;\n  if (!Hero) _missingMdxReference(\"Hero\", true);\n  return React.createElement(Hero, {\n    title: \"Message Broker\"\n  }, React.createElement(_components.p, null, \"The Message Broker is a Typescript library which aims to provide asynchronous communication between typescript components.\\nIt leverages the RxJS library to facilitate a pub/sub pattern and accepts user-defined contracts to ensure type safety across messages.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../../components/layout';\nimport PageHead from '../../components/page-head';\n\nimport HeroContent from '../../../content/hero.mdx';\n\nconst NewsIndex = ({ data, location }) => {\n  const news = data.allMdx.nodes;\n\n  return (\n    <Layout data={data} location={location}>\n      <div className=\"main news-main\">\n        <HeroContent />\n        {news.map((node) => {\n          const title = node.frontmatter.title;\n          const date = new Date(node.frontmatter.date);\n          return (\n            <article className=\"content news-content\" key={node.fields.slug}>\n              <div className=\"eyebrow\">{date.toLocaleDateString()}</div>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              <section>{node.excerpt}</section>\n            </article>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default NewsIndex;\n\nexport const Head = ({ data }) => (\n  <PageHead title={data.site.siteMetadata.title} />\n);\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        documentationUrl\n      }\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"/news//\" } } }\n      sort: [{ frontmatter: { date: DESC } }]\n    ) {\n      nodes {\n        excerpt\n        frontmatter {\n          date\n          title\n        }\n        internal {\n          contentFilePath\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","Hero","id","component","Error","_missingMdxReference","React","title","wrapper","MDXLayout","_ref","data","location","news","allMdx","nodes","Layout","className","HeroContent","map","node","frontmatter","date","Date","key","fields","slug","toLocaleDateString","Link","to","excerpt","Head","_ref2","PageHead","site","siteMetadata"],"sourceRoot":""}