{"version":3,"file":"component---src-pages-index-js-89edbdece59de56a8857.js","mappings":"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","sources":["webpack://ms-gh-pages/./content/alternatives.mdx","webpack://ms-gh-pages/./content/background.mdx","webpack://ms-gh-pages/./content/getting-started.mdx","webpack://ms-gh-pages/./content/hero.mdx","webpack://ms-gh-pages/./content/use-cases.mdx","webpack://ms-gh-pages/./src/pages/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"List of alternatives to the Message Broker.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://docs.bullmq.io\"\n  }, \"BullMQ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Relies on Redis\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://bus.node-ts.com\"\n  }, \"@node-ts/bus\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Both of these alternatives lack the same level of type safety that the Message Broker provides.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"This project was written at Morgan Stanley to provide an internal messaging system for large scale UI systems.\\nThe project was later Open Sourced so others could benefit from it.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> @morgan-stanley/message-broker</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n    messagebroker<span class=\\\"token punctuation\\\">,</span>\\n    IMessageBroker\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@morgan-stanley/message-broker'</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">IContracts</span> <span class=\\\"token punctuation\\\">{</span>\\n    myChannel<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        payload<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> broker<span class=\\\"token operator\\\">:</span> IMessageBroker<span class=\\\"token operator\\\">&lt;</span>IContracts<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">=</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">messagebroker</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>IContracts<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nbroker<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'myChannel'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">subscribe</span><span class=\\\"token punctuation\\\">(</span>message <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token builtin\\\">console</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nbroker<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'myChannel'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">publish</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    payload<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'My first message using the MessageBroker!'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {Hero} = _components;\n  if (!Hero) _missingMdxReference(\"Hero\", true);\n  return React.createElement(Hero, {\n    title: \"Message Broker\"\n  }, React.createElement(_components.p, null, \"The Message Broker is a Typescript library which aims to provide asynchronous communication between typescript components.\\nIt leverages the RxJS library to facilitate a pub/sub pattern and accepts user-defined contracts to ensure type safety across messages.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h4: \"h4\",\n    a: \"a\",\n    span: \"span\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Here is an example of a usecase in which the Message Broker could be useful.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"notification-system\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#notification-system\",\n    \"aria-label\": \"notification system permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Notification system\"), \"\\n\", React.createElement(_components.p, null, \"Let’s say you have some document uploading functionality in your UI.\\nThe uploading may take up to a minute and you don’t want the user to have to wait, so once the upload is complete you want to have a pop-up notification appear which tells the user that their upload was successful.\"), \"\\n\", React.createElement(_components.p, null, \"The code for your pop-up notification can live anywhere in your codebase, and can “listen” for a “document_uploaded” message using the MessageBroker.\\nNow all that needs to happen is for the document upload service to publish that message when the upload completes.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" that with this model, our document uploading service doesn’t even have to know about the existence of the notification service, so everything is nice and decoupled.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"mediator-pattern\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#mediator-pattern\",\n    \"aria-label\": \"mediator pattern permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Mediator Pattern\"), \"\\n\", React.createElement(_components.p, null, \"More generically, the Message Broker essentially acts as a \", React.createElement(_components.a, {\n    href: \"https://refactoring.guru/design-patterns/mediator\"\n  }, \"Mediator\"), \" for your components.\\nAny time you would apply the Mediator pattern, the Message Broker is the perfect solution to avoid you some boilerplate coding.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Alternatives from '../../content/alternatives.mdx';\nimport Background from '../../content/background.mdx';\nimport GettingStarted from '../../content/getting-started.mdx';\nimport HeroContent from '../../content/hero.mdx';\nimport UseCases from '../../content/use-cases.mdx';\n\nimport Article from '../components/article';\nimport PageHead from '../components/page-head';\nimport Layout from '../components/layout';\n\nconst SiteIndex = ({ data, location }) => {\n  return (\n    <Layout data={data} location={location}>\n      <div className=\"main home-main\">\n        <HeroContent />\n        <section className=\"content\">\n          <Article title=\"Background\">\n            <Background />\n          </Article>\n          <Article title=\"Use cases\">\n            <UseCases />\n          </Article>\n          <Article title=\"Alternatives\">\n            <Alternatives />\n          </Article>\n          <Article title=\"Getting Started\">\n            <GettingStarted />\n          </Article>\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data }) => (\n  <PageHead title={data.site.siteMetadata.title} />\n);\n\nexport default SiteIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        documentationUrl\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","span","dangerouslySetInnerHTML","__html","Hero","id","component","Error","_missingMdxReference","title","h4","strong","style","position","className","Head","_ref2","data","PageHead","site","siteMetadata","_ref","location","Layout","HeroContent","Article","Background","UseCases","Alternatives","GettingStarted"],"sourceRoot":""}