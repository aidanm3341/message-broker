{"version":3,"file":"component---src-templates-page-js-content-file-path-content-alternatives-mdx-ee76b76811e8f1e7d1f8.js","mappings":"uIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,+CAAgD,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,KAAMK,EAAAA,cAAoBT,EAAYK,GAAI,KAAMI,EAAAA,cAAoBT,EAAYM,EAAG,CAC3QI,KAAM,0BACL,UAAW,KAAMD,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,KAAMK,EAAAA,cAAoBT,EAAYK,GAAI,KAAM,mBAAoB,MAAO,MAAO,KAAMI,EAAAA,cAAoBT,EAAYK,GAAI,KAAMI,EAAAA,cAAoBT,EAAYM,EAAG,CACjOI,KAAM,2BACL,iBAAkB,MAAO,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,mGAC7E,CAKA,IAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,C,0ICdA,MAAMc,EAAeC,IAAuC,IAAtC,MAACC,EAAK,KAAEC,EAAI,SAAEC,EAAQ,SAAEC,GAASJ,EACrD,OAAOL,EAAAA,cAAoBU,EAAAA,EAAQ,CACjCH,KAAMA,EACNC,SAAUA,GACTR,EAAAA,cAAoB,UAAW,CAChCW,UAAW,qBACVX,EAAAA,cAAoB,SAAU,KAAMA,EAAAA,cAAoB,KAAM,KAAMM,IAASG,GAAU,EAG7E,SAASG,EAAiBtB,GACvC,OAAOU,EAAAA,cAAoBI,EAAcd,EAAOU,EAAAA,cAAoBa,EAAAA,EAAqBvB,GAC3F,CACO,MAAMwB,EAAOC,IAAyB,IAAxB,KAACR,EAAI,YAAES,GAAYD,EACtC,MAAMT,EAAQ,GAAGU,EAAYC,YAAYX,WAAWC,EAAKW,KAAKC,aAAab,QAC3E,OAAON,EAAAA,cAAoBoB,EAAAA,EAAU,CACnCd,MAAOA,GACNN,EAAAA,cAAoB,OAAQ,CAC7BqB,KAAM,cACNC,QAASN,EAAYO,cACpB,C","sources":["webpack://ms-gh-pages/./content/alternatives.mdx","webpack://ms-gh-pages/./src/templates/page.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"List of alternatives to the Message Broker.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://docs.bullmq.io\"\n  }, \"BullMQ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Relies on Redis\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://bus.node-ts.com\"\n  }, \"@node-ts/bus\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Both of these alternatives lack the same level of type safety that the Message Broker provides.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/message-broker/message-broker/site/content/alternatives.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/layout';\nimport PageHead from '../components/page-head';\nconst PageTemplate = ({title, data, location, children}) => {\n  return React.createElement(Layout, {\n    data: data,\n    location: location\n  }, React.createElement(\"article\", {\n    className: \"page-main content\"\n  }, React.createElement(\"header\", null, React.createElement(\"h2\", null, title)), children));\n};\nPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data, pageContext}) => {\n  const title = `${pageContext.frontmatter.title} | ${data.site.siteMetadata.title}`;\n  return React.createElement(PageHead, {\n    title: title\n  }, React.createElement(\"meta\", {\n    name: \"description\",\n    content: pageContext.description\n  }));\n};\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      frontmatter {\n        date\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","PageTemplate","_ref","title","data","location","children","Layout","className","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","pageContext","frontmatter","site","siteMetadata","PageHead","name","content","description"],"sourceRoot":""}